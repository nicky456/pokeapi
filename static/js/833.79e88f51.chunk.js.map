{"version":3,"file":"static/js/833.79e88f51.chunk.js","mappings":"gRA6CA,EAnCsC,SAAH,GAA+B,IAAzBA,EAAI,EAAJA,KACvC,OACE,SAAC,KAAI,CAACC,GAAE,gBAAWD,GAAO,UACxB,SAAC,EAAiB,CAChBE,UAAU,iBACVC,MACE,CACE,kBAAkBC,EAAAA,EAAAA,IAAWJ,IAEhC,UAED,UAACK,EAAI,CACHH,UAAU,WACVC,MACE,CACE,kBAAkBC,EAAAA,EAAAA,IAAWJ,IAEhC,WAED,SAACM,EAAK,CACJH,MAAO,CACLI,gBAAgB,yBAAD,OAA2BP,EAAI,SAC9CQ,iBAAkB,YAClBC,eAAgB,MAChBC,mBAAoB,aAGxB,SAACC,EAAI,UAAEX,KACP,SAACY,EAAI,CAACV,UAAU,6BAK1B,EAMMW,EAAoBC,EAAAA,GAAAA,IAAU,uqBAQpBC,EAAAA,EAAAA,OA2BVV,EAAOS,EAAAA,GAAAA,IAAU,6MAWjBR,EAAQQ,EAAAA,GAAAA,IAAU,2DAIlBH,EAAOG,EAAAA,GAAAA,IAAU,oLAOZC,EAAAA,EAAAA,OAELH,EAAOE,EAAAA,GAAAA,EAAQ,gRAMVC,EAAAA,EAAAA,O,UC/EX,EA1BmC,WAAO,IAAD,EACjCC,GAAWC,EAAAA,EAAAA,KACXC,GAAeC,EAAAA,EAAAA,GAAeC,EAAAA,IAOpC,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GAASM,EAAAA,EAAAA,IAAyB,CAAC,GACrC,GAAG,CAACN,KAGF,UAACO,EAAyB,CAACrB,UAAU,YAAW,WAC9C,UAACsB,EAAQ,CAACtB,UAAU,MAAK,WACvB,SAAC,EAAK,CAACuB,IAAKC,EAAMC,IAAI,aACtB,SAACC,EAAK,UAAC,gCAET,SAACC,EAAG,CAAC3B,UAAU,MAAK,SACL,OAAZgB,QAAY,IAAZA,GAAkB,QAAN,EAAZA,EAAcY,YAAI,WAAN,EAAZ,EAAoBC,KAAI,SAACC,GAAQ,OAChC,SAACC,EAAG,CAAsB/B,UAAU,cAAa,UAC/C,SAAC,EAAQ,CAACF,KAAc,OAARgC,QAAQ,IAARA,OAAQ,EAARA,EAAUhC,QADV,OAARgC,QAAQ,IAARA,OAAQ,EAARA,EAAUhC,KAEd,QAKhB,EAMMwB,EAAWV,EAAAA,GAAAA,IAAU,wEAIrBR,EAAQQ,EAAAA,GAAAA,IAAU,uFAKlBc,EAAQd,EAAAA,GAAAA,IAAU,8KACbC,EAAAA,EAAAA,OAOLQ,EAA4BT,EAAAA,GAAAA,IAAU,sBACtCe,EAAMf,EAAAA,GAAAA,IAAU,sEAIhBmB,EAAMnB,EAAAA,GAAAA,IAAU,qB","sources":["components/TypeCardComponent.tsx","components/PokemonTypesPage.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../vars/colors\";\nimport { Link } from \"react-router-dom\";\nimport { typeColors } from \"../helpers/helperFuncions\";\n\ninterface TypeProps {\n  name: string;\n}\n\nconst TypeCard: React.FC<TypeProps> = ({ name }): JSX.Element => {\n  return (\n    <Link to={`/type/${name}`}>\n      <TypeCardComponent\n        className=\"shadow rounded\"\n        style={\n          {\n            \"--my-color-var\": typeColors(name),\n          } as React.CSSProperties\n        }\n      >\n        <Card\n          className=\" rounded\"\n          style={\n            {\n              \"--my-color-var\": typeColors(name),\n            } as React.CSSProperties\n          }\n        >\n          <Image\n            style={{\n              backgroundImage: `url(/assets/img/types/${name}.png)`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: \"70%\",\n              backgroundPosition: \"center\",\n            }}\n          ></Image>\n          <Name>{name}</Name>\n          <Icon className=\"fa fa-search fa-3x\"></Icon>\n        </Card>\n      </TypeCardComponent>\n    </Link>\n  );\n};\n\nexport default TypeCard;\n\n//// Styles\n\nconst TypeCardComponent = styled.div`\n  overflow: hidden;\n  height: 200px;\n  width: 200px;\n  position: relative;\n  cursor: pointer;\n  box-shadow: 0 0 25px 1px rgba(0, 0, 0, 0.3);\n  transition: 0.5s;\n  background: ${colors.white};\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    top: 50%;\n    left: 50%;\n    width: 500px;\n    height: 500px;\n    transform: translate(-140%, -50%);\n    background-color: var(--my-color-var);\n    opacity: 0.8;\n    border-radius: 50%;\n    transition: 0.8s;\n  }\n\n  &:hover::after {\n    transform: translate(-50%, -50%);\n  }\n\n  &:hover i {\n    transform: translate(-50%, -50%);\n    transition-timing-function: ease;\n  }\n`;\n\nconst Card = styled.div`\n  height: 160px;\n  width: 160px;\n  margin: 10px;\n  padding: 10px;\n  background: linear-gradient(\n    0deg,\n    rgba(255, 255, 255, 0) 0%,\n    var(--my-color-var) 100%\n  );\n`;\nconst Image = styled.div`\n  width: 160px;\n  height: 125px;\n`;\nconst Name = styled.div`\n  text-transform: capitalize;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 1.1px;\n  margin-top: 10px;\n  color: ${colors.black};\n`;\nconst Icon = styled.i`\n  position: absolute;\n  z-index: 2;\n  top: 50%;\n  left: 50%;\n  transform: translate(-2000px, -50%);\n  color: ${colors.white};\n  text-shadow: 0px 0px 8px rgba(0, 0, 0, 0.6);\n  transition: 0.8s;\n  transition-timing-function: ease-in;\n  font-size: 80px;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { pokemonTypesSelector } from \"../store/pokemonTypesSlice\";\nimport { resetPokemonsListReducer } from \"../store/pokemonsListSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport TypeCard from \"./TypeCardComponent\";\nimport Logo from \"../img/pokeapi.png\";\nimport colors from \"../vars/colors\";\n\nconst PokemonTypesPage: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const pokemonTypes = useAppSelector(pokemonTypesSelector);\n\n  //// Clear stored Pokemons from the Pokemon list\n  useEffect(() => {\n    dispatch(resetPokemonsListReducer({}));\n  }, [dispatch]);\n\n  return (\n    <PokemonTypesPageComponent className=\"container\">\n      <TitleRow className=\"row\">\n        <Image src={Logo} alt=\"PokeAPI\" />\n        <Title>Click on a Pokemon Type</Title>\n      </TitleRow>\n      <Row className=\"row\">\n        {pokemonTypes?.data?.map((pokeType) => (\n          <Col key={pokeType?.name} className=\"col-md-auto\">\n            <TypeCard name={pokeType?.name} />\n          </Col>\n        ))}\n      </Row>\n    </PokemonTypesPageComponent>\n  );\n};\n\nexport default PokemonTypesPage;\n\n//// Styles\n\nconst TitleRow = styled.div`\n  text-align: center;\n  padding-bottom: 30px;\n`;\nconst Image = styled.img`\n  max-width: 12vw;\n  object-fit: contain;\n  margin: 0 auto;\n`;\nconst Title = styled.div`\n  color: ${colors.black};\n  font-size: 32px;\n  font-weight: 900;\n  letter-spacing: 1.5px;\n  text-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);\n  margin-top: 10px;\n`;\nconst PokemonTypesPageComponent = styled.div``;\nconst Row = styled.div`\n  row-gap: 20px;\n  justify-content: center;\n`;\nconst Col = styled.div``;\n"],"names":["name","to","className","style","typeColors","Card","Image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","Name","Icon","TypeCardComponent","styled","colors","dispatch","useAppDispatch","pokemonTypes","useAppSelector","pokemonTypesSelector","useEffect","resetPokemonsListReducer","PokemonTypesPageComponent","TitleRow","src","Logo","alt","Title","Row","data","map","pokeType","Col"],"sourceRoot":""}